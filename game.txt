
sounds.load([
  "sounds/click2.wav", 
  "sounds/music.wav",
  "sounds/bounce.mp3",
  "sounds/clang2.wav"
]);


sounds.whenLoaded = sound;

//++++++++++++++++++++++++

//Sounds and music can only be launched from within the setup function

//+++++++++++++++++++++++

function sound() {
  console.log("sounds loaded");
	
  //Create the sounds
  var shoot = sounds["sounds/click2.wav"],
      music = sounds["sounds/music.wav"],
      bounce = sounds["sounds/bounce.mp3"],
	  clang = sounds["sounds/clang2.wav"];


 
  shoot.volume = 0.4;
  shoot.playbackRate = 0.7; 

  music.loop = true;


  music.pan = -0.8;


  music.volume = 0.7;  


  bounce.setEcho(0.2, 0.3, 1000);


  var a = keyboard(65),
      b = keyboard(66),
      c = keyboard(67),
      d = keyboard(68),
      e = keyboard(69),
      f = keyboard(70);
      g = keyboard(71);
      h = keyboard(72);

  //Control the sounds based on which keys are pressed
	
/* 	if(sound){
		shoot.play();
		sound = false;
	} */
	
	if(soundindex == 1){
		
		shoot.play();
		soundindex = 0;
		
	}
	
	if(soundindex == 2){
		
		clang.play();
		soundindex = 0;
		
	}
	
  //Play the loaded shoot sound
  a.press = function() { shoot.play() };

  //Play the loaded music sound
  b.press = function() {
    if (!music.playing) {
      music.play();
    }
    console.log("music playing");
  };

  //Pause the music 
  c.press = function() {
    music.pause();
    console.log("music paused");
  };

  //Restart the music 
  d.press = function() {
    music.restart();
    console.log("music restarted");
  };

  //Play the music from the 10 second mark
  e.press = function() {
    music.playFrom(10);
    console.log("music start point changed");
  };
  
  //Play the bounce sound
  f.press = function() { bounce.play() };

  //Fade the music out over 3 seconds
  g.press = function() { 
    music.fadeOut(3);
  };

  //Fade the music in over 3 seconds
  h.press = function() { 
    music.fadeIn(3);
  };
  
  
}


var i = keyboard(73),
    j = keyboard(74),
    k = keyboard(75),
    l = keyboard(76);

	
i.press = function(){ shootSound() };
j.press = function(){ jumpSound() };
k.press = function(){ explosionSound() };
l.press = function(){ bonusSound() };

//The sound effect functions

//The shoot sound
function shootSound() {
  soundEffect(
    1046.5,           //frequency
    0,                //attack
    0.3,              //decay
    "sawtooth",       //waveform
    1,                //Volume
    -0.8,             //pan
    0,                //wait before playing
    1200,             //pitch bend amount
    false,            //reverse bend
    0,                //random pitch range
    25,               //dissonance
    [0.2, 0.2, 2000], //echo: [delay, feedback, filter]
    undefined         //reverb: [duration, decay, reverse?]
  );
}

//The jump sound
function jumpSound() {
  soundEffect(
    523.25,       //frequency
    0.05,         //attack
    0.2,          //decay
    "sine",       //waveform
    3,            //volume
    0.8,          //pan
    0,            //wait before playing
    600,          //pitch bend amount
    true,         //reverse
    100,          //random pitch range
    0,            //dissonance
    undefined,    //echo: [delay, feedback, filter]
    undefined     //reverb: [duration, decay, reverse?]
  );
}

//The explosion sound
function explosionSound() {
  soundEffect(
    16,          //frequency
    0,           //attack
    1,           //decay
    "sawtooth",  //waveform
    1,           //volume
    0,           //pan
    0,           //wait before playing
    0,           //pitch bend amount
    false,       //reverse
    0,           //random pitch range
    50,          //dissonance
    undefined,   //echo: [delay, feedback, filter]
    undefined    //reverb: [duration, decay, reverse?]
  );
}

//The bonus points sound
function bonusSound() {
  //D
  soundEffect(587.33, 0, 0.2, "square", 1, 0, 0);
  //A
  soundEffect(880, 0, 0.2, "square", 1, 0, 0.1);
  //High D
  soundEffect(1174.66, 0, 0.3, "square", 1, 0, 0.2);
}
      
	  